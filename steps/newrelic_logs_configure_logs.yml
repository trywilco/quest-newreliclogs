id: newrelic_logs_configure_logs
learningObjectives:
  - Configuring logs
hints:
startFlow:
  do:
    - actionId: bot_message
      params:
        person: head-of-rd
      paramsFramework:
        node:
          messages:
            - text: "Go ahead and follow the instructions to configure logs forwarding [here](https://docs.newrelic.com/docs/logs/logs-context/configure-logs-context-nodejs/)."
              delay: 1000
            - text: "**Follow the first option in the guide to set up the logs.** :instruction[**Once you're done, open a PR and i'll review it quickly**]"
              delay: 1000
        rails:
          messages:
            - text: "Go ahead and follow the instructions to configure logs forwarding [here](https://docs.newrelic.com/docs/logs/logs-context/configure-logs-context-ruby/)."
              delay: 1000
            - text: "**Follow the first option in the guide to set up the logs.** :instruction[**Once you're done, open a PR and i'll review it quickly**]"
              delay: 1000
        python:
          messages:
            - text: "Go ahead and follow the instructions to configure logs forwarding [here](https://docs.newrelic.com/docs/logs/logs-context/configure-logs-context-python/)."
              delay: 1000
            - text: "**Follow the first option in the guide to set up the logs.** :instruction[**Once you're done, open a PR and i'll review it quickly**]"
              delay: 1000
trigger:
  type: github_pr_lifecycle_status
  flowNode:
    switch:
      key: ${eventType}
      cases:
        github_pr_opened:
          do:
            - actionId: bot_message
              params:
                person: head-of-rd
                messages:
                  - text: Checking now
                    delay: 1000
            - actionId: github_pr_comment
              params:
                person: head-of-rd
                message: Checking now.
        github_pr_workflow_complete_success:
          if:
            conditions:
#              - conditionId: github_is_file_modified
#                paramsFramework:
#                  python:
#                    fileName: charts/templates/anythink-backend-deployment.yaml
#                  node:
#                    fileName: charts/templates/anythink-backend-deployment.yaml
#                  rails:
#                    fileName: charts/templates/anythink-backend-deployment.yaml
#                onFalseParams:
#                  pr_reject_message: Looks like you did not update the `anythink-backend-deployment.yaml`. Remember to add the relevant environment variables
#                  pr_reject_message_name: deployment_yaml_not_updated
#
#              - conditionId: github_is_file_modified
#                paramsFramework:
#                  python:
#                    fileName: backend/newrelic.ini
#                onFalseParams:
#                  pr_reject_message: Did you update the required flags in the `newrelic.ini` file?
#                  pr_reject_message_name: missing_config

              - conditionId: github_does_file_contain
                equals: true
                params:
                  regex: "application_logging.enabled = true"
                paramsFramework:
                  python:
                    fileName: backend/newrelic.ini
                onFalseParams:
                  pr_reject_message: Did you make sure `application_logging.enabled` flag is set to `true`? Make sure it is not commented out.
                  pr_reject_message_name: application_logging_not_enabled

              - conditionId: github_does_file_contain
                equals: true
                params:
                  regex: "application_logging.forwarding.enabled = true"
                paramsFramework:
                  python:
                    fileName: backend/newrelic.ini
                onFalseParams:
                  pr_reject_message: Did you make sure `application_logging.forwarding.enabled` flag is set to `true`? Make sure it is not commented out.
                  pr_reject_message_name: logging_forwarding_not_enabled

            then:
              do:
                - actionId: bot_message
                  params:
                    person: head-of-rd
                    messages:
                      - text: Looking good! You can merge the PR now.
                        delay: 1000
                - actionId: github_pr_approve
                  params:
                    person: head-of-rd
                    message: Looking good! You can merge the PR now.

            else:
              do:
                - actionId: bot_message
                  params:
                    person: head-of-rd
                    messages:
                      - text: ${pr_reject_message}
                        delay: 1000
                - actionId: github_pr_reject
                  params:
                    person: head-of-rd
                    message: ${pr_reject_message}
                    messageName: ${pr_reject_message_name}

        github_pr_merged:
          do:
            - actionId: finish_step
